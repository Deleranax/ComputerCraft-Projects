--
-- RSA Encryption/Decryption Library
-- By 1lann
--
-- Refer to license: http://pastebin.com/9gWSyqQt
--

--
-- Start of third-party libraries/helpers
--

-- two functions to help make Lua act more like C
local function fl(x)
    if x < 0 then
        return math.ceil(x) + 0 -- make -0 go away
    else
        return math.floor(x)
    end
end

local function cmod(a, b)
    local x = a % b
    if a < 0 and x > 0 then
        x = x - b
    end
    return x
end


local radix = 2^24 -- maybe up to 2^26 is safe?
local radix_sqrt = fl(math.sqrt(radix))

local bigintmt -- forward decl

local function alloc()
    local bi = {}
    setmetatable(bi, bigintmt)
    bi.comps = {}
    bi.sign = 1;
    return bi
end

local function clone(a)
    local bi = alloc()
    bi.sign = a.sign
    local c = bi.comps
    local ac = a.comps
    for i = 1, #ac do
        c[i] = ac[i]
    end
    return bi
end

local function normalize(bi, notrunc)
    local c = bi.comps
    local v
    -- borrow for negative components
    for i = 1, #c - 1 do
        v = c[i]
        if v < 0 then
            c[i+1] = c[i+1] + fl(v / radix) - 1
            v = cmod(v, radix)
            if v ~= 0 then
                c[i] = v + radix
            else
                c[i] = v
                c[i+1] = c[i+1] + 1
            end
        end
    end
    -- is top component negative?
    if c[#c] < 0 then
        -- switch the sign and fix components
        bi.sign = -bi.sign
        for i = 1, #c - 1 do
            v = c[i]
            c[i] = radix - v
            c[i+1] = c[i+1] + 1
        end
        c[#c] = -c[#c]
    end
    -- carry for components larger than radix
    for i = 1, #c do
        v = c[i]
        if v > radix then
            c[i+1] = (c[i+1] or 0) + fl(v / radix)
            c[i] = cmod(v, radix)
        end
    end
    -- trim off leading zeros
    if not notrunc then
        for i = #c, 2, -1 do
            if c[i] == 0 then
                c[i] = nil
            else
                break
            end
        end
    end
    -- check for -0
    if #c == 1 and c[1] == 0 and bi.sign == -1 then
        bi.sign = 1
    end
end

local function negate(a)
    local bi = clone(a)
    bi.sign = -bi.sign
    return bi
end

local function compare(a, b)
    local ac, bc = a.comps, b.comps
    local as, bs = a.sign, b.sign
    if ac == bc then
        return 0
    elseif as > bs then
        return 1
    elseif as < bs then
        return -1
    elseif #ac > #bc then
        return as
    elseif #ac < #bc then
        return -as
    end
    for i = #ac, 1, -1 do
        if ac[i] > bc[i] then
            return as
        elseif ac[i] < bc[i] then
            return -as
        end
    end
    return 0
end

local function lt(a, b)
    return compare(a, b) < 0
end

local function eq(a, b)
    return compare(a, b) == 0
end

local function le(a, b)
    return compare(a, b) <= 0
end

local function addint(a, n)
    local bi = clone(a)
    if bi.sign == 1 then
        bi.comps[1] = bi.comps[1] + n
    else
        bi.comps[1] = bi.comps[1] - n
    end
    normalize(bi)
    return bi
end

local function add(a, b)
    if type(a) == "number" then
        return addint(b, a)
    elseif type(b) == "number" then
        return addint(a, b)
    end
    local bi = clone(a)
    local sign = bi.sign == b.sign
    local c = bi.comps
    for i = #c + 1, #b.comps do
        c[i] = 0
    end
    local bc = b.comps
    for i = 1, #bc do
        local v = bc[i]
        if sign then
            c[i] = c[i] + v
        else
            c[i] = c[i] - v
        end
    end
    normalize(bi)
    return bi
end

local function sub(a, b)
    if type(b) == "number" then
        return addint(a, -b)
    elseif type(a) == "number" then
        a = bigint(a)
    end
    return add(a, negate(b))
end

local function mulint(a, b)
    local bi = clone(a)
    if b < 0 then
        b = -b
        bi.sign = -bi.sign
    end
    local bc = bi.comps
    for i = 1, #bc do
        bc[i] = bc[i] * b
    end
    normalize(bi)
    return bi
end

local function multiply(a, b)
    local bi = alloc()
    local c = bi.comps
    local ac, bc = a.comps, b.comps
    for i = 1, #ac + #bc do
        c[i] = 0
    end
    for i = 1, #ac do
        for j = 1, #bc do
            c[i+j-1] = c[i+j-1] + ac[i] * bc[j]
        end
        -- keep the zeroes
        normalize(bi, true)
    end
    normalize(bi)
    if bi ~= bigint(0) then
        bi.sign = a.sign * b.sign
    end
    return bi
end

local function kmul(a, b)
    local ac, bc = a.comps, b.comps
    local an, bn = #a.comps, #b.comps
    local bi, bj, bk, bl = alloc(), alloc(), alloc(), alloc()
    local ic, jc, kc, lc = bi.comps, bj.comps, bk.comps, bl.comps

    local n = fl((math.max(an, bn) + 1) / 2)
    for i = 1, n do
        ic[i] = (i + n <= an) and ac[i+n] or 0
        jc[i] = (i <= an) and ac[i] or 0
        kc[i] = (i + n <= bn) and bc[i+n] or 0
        lc[i] = (i <= bn) and bc[i] or 0
    end
    normalize(bi)
    normalize(bj)
    normalize(bk)
    normalize(bl)
    local ik = bi * bk
    local jl = bj * bl
    local mid = (bi + bj) * (bk + bl) - ik - jl
    local mc = mid.comps
    local ikc = ik.comps
    local jlc = jl.comps
    for i = 1, #ikc + n*2 do -- fill it up
        jlc[i] = jlc[i] or 0
    end
    for i = 1, #mc do
        jlc[i+n] = jlc[i+n] + mc[i]
    end
    for i = 1, #ikc do
        jlc[i+n*2] = jlc[i+n*2] + ikc[i]
    end
    jl.sign = a.sign * b.sign
    normalize(jl)
    return jl
end

local kthresh = 12

local function mul(a, b)
    if type(a) == "number" then
        return mulint(b, a)
    elseif type(b) == "number" then
        return mulint(a, b)
    end
    if #a.comps < kthresh or #b.comps < kthresh then
        return multiply(a, b)
    end
    return kmul(a, b)
end

local function divint(numer, denom)
    local bi = clone(numer)
    if denom < 0 then
        denom = -denom
        bi.sign = -bi.sign
    end
    local r = 0
    local c = bi.comps
    for i = #c, 1, -1 do
        r = r * radix + c[i]
        c[i] = fl(r / denom)
        r = cmod(r, denom)
    end
    normalize(bi)
    return bi
end

local function multi_divide(numer, denom)
    local n = #denom.comps
    local approx = divint(numer, denom.comps[n])
    for i = n, #approx.comps do
        approx.comps[i - n + 1] = approx.comps[i]
    end
    for i = #approx.comps, #approx.comps - n + 2, -1 do
        approx.comps[i] = nil
    end
    local rem = approx * denom - numer
    if rem < denom then
        quotient = approx
    else
        quotient = approx - multi_divide(rem, denom)
    end
    return quotient
end

local function multi_divide_wrap(numer, denom)
    -- we use a successive approximation method, but it doesn't work
    -- if the high order component is too small.  adjust if needed.
    if denom.comps[#denom.comps] < radix_sqrt then
        numer = mulint(numer, radix_sqrt)
        denom = mulint(denom, radix_sqrt)
    end
    return multi_divide(numer, denom)
end

local function div(numer, denom)
    if type(denom) == "number" then
        if denom == 0 then
            error("divide by 0", 2)
        end
        return divint(numer, denom)
    elseif type(numer) == "number" then
        numer = bigint(numer)
    end
    -- check signs and trivial cases
    local sign = 1
    local cmp = compare(denom, bigint(0))
    if cmp == 0 then
        error("divide by 0", 2)
    elseif cmp == -1 then
        sign = -sign
        denom = negate(denom)
    end
    cmp = compare(numer, bigint(0))
    if cmp == 0 then
        return bigint(0)
    elseif cmp == -1 then
        sign = -sign
        numer = negate(numer)
    end
    cmp = compare(numer, denom)
    if cmp == -1 then
        return bigint(0)
    elseif cmp == 0 then
        return bigint(sign)
    end
    local bi
    -- if small enough, do it the easy way
    if #denom.comps == 1 then
        bi = divint(numer, denom.comps[1])
    else
        bi = multi_divide_wrap(numer, denom)
    end
    if sign == -1 then
        bi = negate(bi)
    end
    return bi
end

local function intrem(bi, m)
    if m < 0 then
        m = -m
    end
    local rad_r = 1
    local r = 0
    local bc = bi.comps
    for i = 1, #bc do
        local v = bc[i]
        r = cmod(r + v * rad_r, m)
        rad_r = cmod(rad_r * radix, m)
    end
    if bi.sign < 1 then
        r = -r
    end
    return r
end

local function intmod(bi, m)
    local r = intrem(bi, m)
    if r < 0 then
        r = r + m
    end
    return r
end

local function rem(bi, m)
    if type(m) == "number" then
        return bigint(intrem(bi, m))
    elseif type(bi) == "number" then
        bi = bigint(bi)
    end

    return bi - ((bi / m) * m)
end

local function mod(a, m)
    local bi = rem(a, m)
    if bi.sign == -1 then
        bi = bi + m
    end
    return bi
end

local printscale = 10000000
local printscalefmt = string.format("%%.%dd", math.log10(printscale))
local function makestr(bi, s)
    if bi >= bigint(printscale) then
        makestr(divint(bi, printscale), s)
    end
    table.insert(s, string.format(printscalefmt, intmod(bi, printscale)))
end

local function biginttostring(bi)
    local s = {}
    if bi < bigint(0) then
        bi = negate(bi)
        table.insert(s, "-")
    end
    makestr(bi, s)
    s = table.concat(s):gsub("^0*", "")
    if s == "" then s = "0" end
    return s
end

local function biginttonumber(bi)
    return tonumber(biginttostring(bi))
end

bigintmt = {
    __add = add,
    __sub = sub,
    __mul = mul,
    __div = div,
    __mod = mod,
    __unm = negate,
    __eq = eq,
    __lt = lt,
    __le = le,
    __tostring = biginttostring,
}

local cache = {}
local ncache = 0

function bigint(n)
    if cache[n] then
        return cache[n]
    end
    local bi
    if type(n) == "string" then
        local digits = { n:byte(1, -1) }
        for i = 1, #digits do
            digits[i] = string.char(digits[i])
        end
        local start = 1
        local sign = 1
        if digits[i] == '-' then
            sign = -1
            start = 2
        end
        bi = bigint(0)
        for i = start, #digits do
            bi = addint(mulint(bi, 10), tonumber(digits[i]))
        end
        bi = mulint(bi, sign)
    else
        bi = alloc()
        bi.comps[1] = n
        normalize(bi)
    end
    if ncache > 100 then
        cache = {}
        ncache = 0
    end
    cache[n] = bi
    ncache = ncache + 1
    return bi
end

--
-- Start of my code
--

local powersTwo = {
    bigint("2"),
    bigint("4"),
    bigint("8"),
    bigint("16"),
    bigint("32"),
    bigint("64"),
    bigint("128"),
    bigint("256"),
    bigint("512"),
    bigint("1024"),
    bigint("2048"),
    bigint("4096"),
    bigint("8192"),
    bigint("16384"),
    bigint("32768"),
    bigint("65536"),
    bigint("131072"),
    bigint("262144"),
    bigint("524288"),
    bigint("1048576"),
    bigint("2097152"),
    bigint("4194304"),
    bigint("8388608"),
    bigint("16777216"),
    bigint("33554432"),
    bigint("67108864"),
    bigint("134217728"),
    bigint("268435456"),
    bigint("536870912"),
    bigint("1073741824"),
    bigint("2147483648"),
    bigint("4294967296"),
    bigint("8589934592"),
    bigint("17179869184"),
    bigint("34359738368"),
    bigint("68719476736"),
    bigint("137438953472"),
    bigint("274877906944"),
    bigint("549755813888"),
    bigint("1099511627776"),
    bigint("2199023255552"),
    bigint("4398046511104"),
    bigint("8796093022208"),
    bigint("17592186044416"),
    bigint("35184372088832"),
    bigint("70368744177664"),
    bigint("140737488355328"),
    bigint("281474976710656"),
    bigint("562949953421312"),
    bigint("1125899906842624"),
    bigint("2251799813685248"),
    bigint("4503599627370496"),
    bigint("9007199254740992"),
    bigint("18014398509481984"),
    bigint("36028797018963968"),
    bigint("72057594037927936"),
    bigint("144115188075855872"),
    bigint("288230376151711744"),
    bigint("576460752303423488"),
    bigint("1152921504606846976"),
    bigint("2305843009213693952"),
    bigint("4611686018427387904"),
    bigint("9223372036854775808"),
    bigint("18446744073709551616"),
    bigint("36893488147419103232"),
    bigint("73786976294838206464"),
    bigint("147573952589676412928"),
    bigint("295147905179352825856"),
    bigint("590295810358705651712"),
    bigint("1180591620717411303424"),
    bigint("2361183241434822606848"),
    bigint("4722366482869645213696"),
    bigint("9444732965739290427392"),
    bigint("18889465931478580854784"),
    bigint("37778931862957161709568"),
    bigint("75557863725914323419136"),
    bigint("151115727451828646838272"),
    bigint("302231454903657293676544"),
    bigint("604462909807314587353088"),
    bigint("1208925819614629174706176"),
    bigint("2417851639229258349412352"),
    bigint("4835703278458516698824704"),
    bigint("9671406556917033397649408"),
    bigint("19342813113834066795298816"),
    bigint("38685626227668133590597632"),
    bigint("77371252455336267181195264"),
    bigint("154742504910672534362390528"),
    bigint("309485009821345068724781056"),
    bigint("618970019642690137449562112"),
    bigint("1237940039285380274899124224"),
    bigint("2475880078570760549798248448"),
    bigint("4951760157141521099596496896"),
    bigint("9903520314283042199192993792"),
    bigint("19807040628566084398385987584"),
    bigint("39614081257132168796771975168"),
    bigint("79228162514264337593543950336"),
    bigint("158456325028528675187087900672"),
    bigint("316912650057057350374175801344"),
    bigint("633825300114114700748351602688"),
    bigint("1267650600228229401496703205376"),
    bigint("2535301200456458802993406410752"),
    bigint("5070602400912917605986812821504"),
    bigint("10141204801825835211973625643008"),
    bigint("20282409603651670423947251286016"),
    bigint("40564819207303340847894502572032"),
    bigint("81129638414606681695789005144064"),
    bigint("162259276829213363391578010288128"),
    bigint("324518553658426726783156020576256"),
    bigint("649037107316853453566312041152512"),
    bigint("1298074214633706907132624082305024"),
    bigint("2596148429267413814265248164610048"),
    bigint("5192296858534827628530496329220096"),
    bigint("10384593717069655257060992658440192"),
    bigint("20769187434139310514121985316880384"),
    bigint("41538374868278621028243970633760768"),
    bigint("83076749736557242056487941267521536"),
    bigint("166153499473114484112975882535043072"),
    bigint("332306998946228968225951765070086144"),
    bigint("664613997892457936451903530140172288"),
    bigint("1329227995784915872903807060280344576"),
    bigint("2658455991569831745807614120560689152"),
    bigint("5316911983139663491615228241121378304"),
    bigint("10633823966279326983230456482242756608"),
    bigint("21267647932558653966460912964485513216"),
    bigint("42535295865117307932921825928971026432"),
    bigint("85070591730234615865843651857942052864"),
    bigint("170141183460469231731687303715884105728"),
    bigint("340282366920938463463374607431768211456"),
    bigint("680564733841876926926749214863536422912"),
    bigint("1361129467683753853853498429727072845824"),
    bigint("2722258935367507707706996859454145691648"),
    bigint("5444517870735015415413993718908291383296"),
    bigint("10889035741470030830827987437816582766592"),
    bigint("21778071482940061661655974875633165533184"),
    bigint("43556142965880123323311949751266331066368"),
    bigint("87112285931760246646623899502532662132736"),
    bigint("174224571863520493293247799005065324265472"),
    bigint("348449143727040986586495598010130648530944"),
    bigint("696898287454081973172991196020261297061888"),
    bigint("1393796574908163946345982392040522594123776"),
    bigint("2787593149816327892691964784081045188247552"),
    bigint("5575186299632655785383929568162090376495104"),
    bigint("11150372599265311570767859136324180752990208"),
    bigint("22300745198530623141535718272648361505980416"),
    bigint("44601490397061246283071436545296723011960832"),
    bigint("89202980794122492566142873090593446023921664"),
    bigint("178405961588244985132285746181186892047843328"),
    bigint("356811923176489970264571492362373784095686656"),
    bigint("713623846352979940529142984724747568191373312"),
    bigint("1427247692705959881058285969449495136382746624"),
    bigint("2854495385411919762116571938898990272765493248"),
    bigint("5708990770823839524233143877797980545530986496"),
    bigint("11417981541647679048466287755595961091061972992"),
    bigint("22835963083295358096932575511191922182123945984"),
    bigint("45671926166590716193865151022383844364247891968"),
    bigint("91343852333181432387730302044767688728495783936"),
    bigint("182687704666362864775460604089535377456991567872"),
    bigint("365375409332725729550921208179070754913983135744"),
    bigint("730750818665451459101842416358141509827966271488"),
    bigint("1461501637330902918203684832716283019655932542976"),
    bigint("2923003274661805836407369665432566039311865085952"),
    bigint("5846006549323611672814739330865132078623730171904"),
    bigint("11692013098647223345629478661730264157247460343808"),
    bigint("23384026197294446691258957323460528314494920687616"),
    bigint("46768052394588893382517914646921056628989841375232"),
    bigint("93536104789177786765035829293842113257979682750464"),
    bigint("187072209578355573530071658587684226515959365500928"),
    bigint("374144419156711147060143317175368453031918731001856"),
    bigint("748288838313422294120286634350736906063837462003712"),
    bigint("1496577676626844588240573268701473812127674924007424"),
    bigint("2993155353253689176481146537402947624255349848014848"),
    bigint("5986310706507378352962293074805895248510699696029696"),
    bigint("11972621413014756705924586149611790497021399392059392"),
    bigint("23945242826029513411849172299223580994042798784118784"),
    bigint("47890485652059026823698344598447161988085597568237568"),
    bigint("95780971304118053647396689196894323976171195136475136"),
    bigint("191561942608236107294793378393788647952342390272950272"),
    bigint("383123885216472214589586756787577295904684780545900544"),
    bigint("766247770432944429179173513575154591809369561091801088"),
    bigint("1532495540865888858358347027150309183618739122183602176"),
    bigint("3064991081731777716716694054300618367237478244367204352"),
    bigint("6129982163463555433433388108601236734474956488734408704"),
    bigint("12259964326927110866866776217202473468949912977468817408"),
    bigint("24519928653854221733733552434404946937899825954937634816"),
    bigint("49039857307708443467467104868809893875799651909875269632"),
    bigint("98079714615416886934934209737619787751599303819750539264"),
    bigint("196159429230833773869868419475239575503198607639501078528"),
    bigint("392318858461667547739736838950479151006397215279002157056"),
    bigint("784637716923335095479473677900958302012794430558004314112"),
    bigint("1569275433846670190958947355801916604025588861116008628224"),
    bigint("3138550867693340381917894711603833208051177722232017256448"),
    bigint("6277101735386680763835789423207666416102355444464034512896"),
    bigint("12554203470773361527671578846415332832204710888928069025792"),
    bigint("25108406941546723055343157692830665664409421777856138051584"),
    bigint("50216813883093446110686315385661331328818843555712276103168"),
    bigint("100433627766186892221372630771322662657637687111424552206336"),
    bigint("200867255532373784442745261542645325315275374222849104412672"),
    bigint("401734511064747568885490523085290650630550748445698208825344"),
    bigint("803469022129495137770981046170581301261101496891396417650688"),
    bigint("1606938044258990275541962092341162602522202993782792835301376"),
    bigint("3213876088517980551083924184682325205044405987565585670602752"),
    bigint("6427752177035961102167848369364650410088811975131171341205504"),
    bigint("12855504354071922204335696738729300820177623950262342682411008"),
    bigint("25711008708143844408671393477458601640355247900524685364822016"),
    bigint("51422017416287688817342786954917203280710495801049370729644032"),
    bigint("102844034832575377634685573909834406561420991602098741459288064"),
    bigint("205688069665150755269371147819668813122841983204197482918576128"),
    bigint("411376139330301510538742295639337626245683966408394965837152256"),
    bigint("822752278660603021077484591278675252491367932816789931674304512"),
    bigint("1645504557321206042154969182557350504982735865633579863348609024"),
    bigint("3291009114642412084309938365114701009965471731267159726697218048"),
    bigint("6582018229284824168619876730229402019930943462534319453394436096"),
    bigint("13164036458569648337239753460458804039861886925068638906788872192"),
    bigint("26328072917139296674479506920917608079723773850137277813577744384"),
    bigint("52656145834278593348959013841835216159447547700274555627155488768"),
    bigint("105312291668557186697918027683670432318895095400549111254310977536"),
    bigint("210624583337114373395836055367340864637790190801098222508621955072"),
    bigint("421249166674228746791672110734681729275580381602196445017243910144"),
    bigint("842498333348457493583344221469363458551160763204392890034487820288"),
    bigint("1684996666696914987166688442938726917102321526408785780068975640576"),
    bigint("3369993333393829974333376885877453834204643052817571560137951281152"),
    bigint("6739986666787659948666753771754907668409286105635143120275902562304"),
    bigint("13479973333575319897333507543509815336818572211270286240551805124608"),
    bigint("26959946667150639794667015087019630673637144422540572481103610249216"),
    bigint("53919893334301279589334030174039261347274288845081144962207220498432"),
    bigint("107839786668602559178668060348078522694548577690162289924414440996864"),
    bigint("215679573337205118357336120696157045389097155380324579848828881993728"),
    bigint("431359146674410236714672241392314090778194310760649159697657763987456"),
    bigint("862718293348820473429344482784628181556388621521298319395315527974912"),
    bigint("1725436586697640946858688965569256363112777243042596638790631055949824"),
    bigint("3450873173395281893717377931138512726225554486085193277581262111899648"),
    bigint("6901746346790563787434755862277025452451108972170386555162524223799296"),
    bigint("13803492693581127574869511724554050904902217944340773110325048447598592"),
    bigint("27606985387162255149739023449108101809804435888681546220650096895197184"),
    bigint("55213970774324510299478046898216203619608871777363092441300193790394368"),
    bigint("110427941548649020598956093796432407239217743554726184882600387580788736"),
    bigint("220855883097298041197912187592864814478435487109452369765200775161577472"),
    bigint("441711766194596082395824375185729628956870974218904739530401550323154944"),
    bigint("883423532389192164791648750371459257913741948437809479060803100646309888"),
    bigint("1766847064778384329583297500742918515827483896875618958121606201292619776"),
    bigint("3533694129556768659166595001485837031654967793751237916243212402585239552"),
    bigint("7067388259113537318333190002971674063309935587502475832486424805170479104"),
    bigint("14134776518227074636666380005943348126619871175004951664972849610340958208"),
    bigint("28269553036454149273332760011886696253239742350009903329945699220681916416"),
    bigint("56539106072908298546665520023773392506479484700019806659891398441363832832"),
    bigint("113078212145816597093331040047546785012958969400039613319782796882727665664"),
    bigint("226156424291633194186662080095093570025917938800079226639565593765455331328"),
    bigint("452312848583266388373324160190187140051835877600158453279131187530910662656"),
    bigint("904625697166532776746648320380374280103671755200316906558262375061821325312"),
    bigint("1809251394333065553493296640760748560207343510400633813116524750123642650624"),
    bigint("3618502788666131106986593281521497120414687020801267626233049500247285301248"),
    bigint("7237005577332262213973186563042994240829374041602535252466099000494570602496"),
    bigint("14474011154664524427946373126085988481658748083205070504932198000989141204992"),
    bigint("28948022309329048855892746252171976963317496166410141009864396001978282409984"),
    bigint("57896044618658097711785492504343953926634992332820282019728792003956564819968"),
    bigint("115792089237316195423570985008687907853269984665640564039457584007913129639936"),
    bigint("231584178474632390847141970017375815706539969331281128078915168015826259279872"),
    bigint("463168356949264781694283940034751631413079938662562256157830336031652518559744"),
    bigint("926336713898529563388567880069503262826159877325124512315660672063305037119488"),
    bigint("1852673427797059126777135760139006525652319754650249024631321344126610074238976"),
    bigint("3705346855594118253554271520278013051304639509300498049262642688253220148477952"),
    bigint("7410693711188236507108543040556026102609279018600996098525285376506440296955904"),
    bigint("14821387422376473014217086081112052205218558037201992197050570753012880593911808"),
    bigint("29642774844752946028434172162224104410437116074403984394101141506025761187823616"),
    bigint("59285549689505892056868344324448208820874232148807968788202283012051522375647232"),
    bigint("118571099379011784113736688648896417641748464297615937576404566024103044751294464"),
    bigint("237142198758023568227473377297792835283496928595231875152809132048206089502588928"),
    bigint("474284397516047136454946754595585670566993857190463750305618264096412179005177856"),
    bigint("948568795032094272909893509191171341133987714380927500611236528192824358010355712"),
    bigint("1897137590064188545819787018382342682267975428761855001222473056385648716020711424"),
    bigint("3794275180128377091639574036764685364535950857523710002444946112771297432041422848"),
    bigint("7588550360256754183279148073529370729071901715047420004889892225542594864082845696"),
    bigint("15177100720513508366558296147058741458143803430094840009779784451085189728165691392"),
    bigint("30354201441027016733116592294117482916287606860189680019559568902170379456331382784"),
    bigint("60708402882054033466233184588234965832575213720379360039119137804340758912662765568"),
    bigint("121416805764108066932466369176469931665150427440758720078238275608681517825325531136"),
    bigint("242833611528216133864932738352939863330300854881517440156476551217363035650651062272"),
    bigint("485667223056432267729865476705879726660601709763034880312953102434726071301302124544"),
    bigint("971334446112864535459730953411759453321203419526069760625906204869452142602604249088"),
    bigint("1942668892225729070919461906823518906642406839052139521251812409738904285205208498176"),
    bigint("3885337784451458141838923813647037813284813678104279042503624819477808570410416996352"),
    bigint("7770675568902916283677847627294075626569627356208558085007249638955617140820833992704"),
    bigint("15541351137805832567355695254588151253139254712417116170014499277911234281641667985408"),
    bigint("31082702275611665134711390509176302506278509424834232340028998555822468563283335970816"),
    bigint("62165404551223330269422781018352605012557018849668464680057997111644937126566671941632"),
    bigint("124330809102446660538845562036705210025114037699336929360115994223289874253133343883264"),
    bigint("248661618204893321077691124073410420050228075398673858720231988446579748506266687766528"),
    bigint("497323236409786642155382248146820840100456150797347717440463976893159497012533375533056"),
    bigint("994646472819573284310764496293641680200912301594695434880927953786318994025066751066112"),
    bigint("1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224"),
    bigint("3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448"),
    bigint("7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896"),
    bigint("15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792"),
    bigint("31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584"),
    bigint("63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168"),
    bigint("127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336"),
    bigint("254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672"),
    bigint("509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344"),
    bigint("1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688"),
    bigint("2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376"),
    bigint("4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752"),
    bigint("8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504"),
    bigint("16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008"),
    bigint("32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016"),
    bigint("65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032"),
    bigint("130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064"),
    bigint("260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128"),
    bigint("521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256"),
    bigint("1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512"),
    bigint("2085924839766513752338888384931203236916703635113918720651407820138886450957656787131798913024"),
    bigint("4171849679533027504677776769862406473833407270227837441302815640277772901915313574263597826048"),
    bigint("8343699359066055009355553539724812947666814540455674882605631280555545803830627148527195652096"),
    bigint("16687398718132110018711107079449625895333629080911349765211262561111091607661254297054391304192"),
    bigint("33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608384"),
    bigint("66749594872528440074844428317798503581334516323645399060845050244444366430645017188217565216768"),
    bigint("133499189745056880149688856635597007162669032647290798121690100488888732861290034376435130433536"),
    bigint("266998379490113760299377713271194014325338065294581596243380200977777465722580068752870260867072"),
    bigint("533996758980227520598755426542388028650676130589163192486760401955554931445160137505740521734144"),
    bigint("1067993517960455041197510853084776057301352261178326384973520803911109862890320275011481043468288"),
    bigint("2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576"),
    bigint("4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152"),
    bigint("8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304"),
    bigint("17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608"),
    bigint("34175792574734561318320347298712833833643272357706444319152665725155515612490248800367393390985216"),
    bigint("68351585149469122636640694597425667667286544715412888638305331450311031224980497600734786781970432"),
    bigint("136703170298938245273281389194851335334573089430825777276610662900622062449960995201469573563940864"),
    bigint("273406340597876490546562778389702670669146178861651554553221325801244124899921990402939147127881728"),
    bigint("546812681195752981093125556779405341338292357723303109106442651602488249799843980805878294255763456"),
    bigint("1093625362391505962186251113558810682676584715446606218212885303204976499599687961611756588511526912"),
    bigint("2187250724783011924372502227117621365353169430893212436425770606409952999199375923223513177023053824"),
    bigint("4374501449566023848745004454235242730706338861786424872851541212819905998398751846447026354046107648"),
    bigint("8749002899132047697490008908470485461412677723572849745703082425639811996797503692894052708092215296"),
    bigint("17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592"),
    bigint("34996011596528190789960035633881941845650710894291398982812329702559247987190014771576210832368861184"),
    bigint("69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368"),
    bigint("139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444736"),
    bigint("279968092772225526319680285071055534765205687154331191862498637620473983897520118172609686658950889472"),
    bigint("559936185544451052639360570142111069530411374308662383724997275240947967795040236345219373317901778944"),
    bigint("1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888"),
    bigint("2239744742177804210557442280568444278121645497234649534899989100963791871180160945380877493271607115776"),
    bigint("4479489484355608421114884561136888556243290994469299069799978201927583742360321890761754986543214231552"),
    bigint("8958978968711216842229769122273777112486581988938598139599956403855167484720643781523509973086428463104"),
    bigint("17917957937422433684459538244547554224973163977877196279199912807710334969441287563047019946172856926208"),
    bigint("35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852416"),
    bigint("71671831749689734737838152978190216899892655911508785116799651230841339877765150252188079784691427704832"),
    bigint("143343663499379469475676305956380433799785311823017570233599302461682679755530300504376159569382855409664"),
    bigint("286687326998758938951352611912760867599570623646035140467198604923365359511060601008752319138765710819328"),
    bigint("573374653997517877902705223825521735199141247292070280934397209846730719022121202017504638277531421638656"),
    bigint("1146749307995035755805410447651043470398282494584140561868794419693461438044242404035009276555062843277312"),
    bigint("2293498615990071511610820895302086940796564989168281123737588839386922876088484808070018553110125686554624"),
    bigint("4586997231980143023221641790604173881593129978336562247475177678773845752176969616140037106220251373109248"),
    bigint("9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496"),
    bigint("18347988927920572092886567162416695526372519913346248989900710715095383008707878464560148424881005492436992"),
    bigint("36695977855841144185773134324833391052745039826692497979801421430190766017415756929120296849762010984873984"),
    bigint("73391955711682288371546268649666782105490079653384995959602842860381532034831513858240593699524021969747968"),
    bigint("146783911423364576743092537299333564210980159306769991919205685720763064069663027716481187399048043939495936"),
    bigint("293567822846729153486185074598667128421960318613539983838411371441526128139326055432962374798096087878991872"),
    bigint("587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744"),
    bigint("1174271291386916613944740298394668513687841274454159935353645485766104512557304221731849499192384351515967488"),
    bigint("2348542582773833227889480596789337027375682548908319870707290971532209025114608443463698998384768703031934976"),
    bigint("4697085165547666455778961193578674054751365097816639741414581943064418050229216886927397996769537406063869952"),
    bigint("9394170331095332911557922387157348109502730195633279482829163886128836100458433773854795993539074812127739904"),
    bigint("18788340662190665823115844774314696219005460391266558965658327772257672200916867547709591987078149624255479808"),
    bigint("37576681324381331646231689548629392438010920782533117931316655544515344401833735095419183974156299248510959616"),
    bigint("75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232"),
    bigint("50306725297525326584926758194517569752043683130132471725266622178061377607334940381676735896625196994043838464"),
    bigint("300613450595050653169853516389035139504087366260264943450533244356122755214669880763353471793250393988087676928"),
    bigint("601226901190101306339707032778070279008174732520529886901066488712245510429339761526706943586500787976175353856"),
    bigint("1202453802380202612679414065556140558016349465041059773802132977424491020858679523053413887173001575952350707712"),
    bigint("2404907604760405225358828131112281116032698930082119547604265954848982041717359046106827774346003151904701415424"),
    bigint("4809815209520810450717656262224562232065397860164239095208531909697964083434718092213655548692006303809402830848"),
    bigint("9619630419041620901435312524449124464130795720328478190417063819395928166869436184427311097384012607618805661696"),
    bigint("19239260838083241802870625048898248928261591440656956380834127638791856333738872368854622194768025215237611323392"),
    bigint("38478521676166483605741250097796497856523182881313912761668255277583712667477744737709244389536050430475222646784"),
    bigint("76957043352332967211482500195592995713046365762627825523336510555167425334955489475418488779072100860950445293568"),
    bigint("153914086704665934422965000391185991426092731525255651046673021110334850669910978950836977558144201721900890587136"),
    bigint("307828173409331868845930000782371982852185463050511302093346042220669701339821957901673955116288403443801781174272"),
    bigint("615656346818663737691860001564743965704370926101022604186692084441339402679643915803347910232576806887603562348544"),
    bigint("1231312693637327475383720003129487931408741852202045208373384168882678805359287831606695820465153613775207124697088"),
    bigint("2462625387274654950767440006258975862817483704404090416746768337765357610718575663213391640930307227550414249394176"),
    bigint("4925250774549309901534880012517951725634967408808180833493536675530715221437151326426783281860614455100828498788352"),
    bigint("9850501549098619803069760025035903451269934817616361666987073351061430442874302652853566563721228910201656997576704"),
    bigint("19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153408"),
    bigint("39402006196394479212279040100143613805079739270465446667948293404245721771497210611414266254884915640806627990306816"),
    bigint("78804012392788958424558080200287227610159478540930893335896586808491443542994421222828532509769831281613255980613632"),
    bigint("157608024785577916849116160400574455220318957081861786671793173616982887085988842445657065019539662563226511961227264"),
    bigint("315216049571155833698232320801148910440637914163723573343586347233965774171977684891314130039079325126453023922454528"),
    bigint("630432099142311667396464641602297820881275828327447146687172694467931548343955369782628260078158650252906047844909056"),
    bigint("1260864198284623334792929283204595641762551656654894293374345388935863096687910739565256520156317300505812095689818112"),
    bigint("2521728396569246669585858566409191283525103313309788586748690777871726193375821479130513040312634601011624191379636224"),
    bigint("5043456793138493339171717132818382567050206626619577173497381555743452386751642958261026080625269202023248382759272448"),
    bigint("10086913586276986678343434265636765134100413253239154346994763111486904773503285916522052161250538404046496765518544896"),
    bigint("20173827172553973356686868531273530268200826506478308693989526222973809547006571833044104322501076808092993531037089792"),
    bigint("40347654345107946713373737062547060536401653012956617387979052445947619094013143666088208645002153616185987062074179584"),
    bigint("80695308690215893426747474125094121072803306025913234775958104891895238188026287332176417290004307232371974124148359168"),
    bigint("161390617380431786853494948250188242145606612051826469551916209783790476376052574664352834580008614464743948248296718336"),
    bigint("322781234760863573706989896500376484291213224103652939103832419567580952752105149328705669160017228929487896496593436672"),
    bigint("645562469521727147413979793000752968582426448207305878207664839135161905504210298657411338320034457858975792993186873344"),
    bigint("1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688"),
    bigint("2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493376"),
    bigint("5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752"),
    bigint("10328999512347634358623676688012047497318823171316894051322637426162590488067364778518581413120551325743612687890989973504"),
    bigint("20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008"),
    bigint("41315998049390537434494706752048189989275292685267576205290549704650361952269459114074325652482205302974450751563959894016"),
    bigint("82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032"),
    bigint("165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064"),
    bigint("330527984395124299475957654016385519914202341482140609642324397637202895618155672912594605219857642423795606012511679152128"),
    bigint("661055968790248598951915308032771039828404682964281219284648795274405791236311345825189210439715284847591212025023358304256"),
    bigint("1322111937580497197903830616065542079656809365928562438569297590548811582472622691650378420879430569695182424050046716608512"),
    bigint("2644223875160994395807661232131084159313618731857124877138595181097623164945245383300756841758861139390364848100093433217024"),
    bigint("5288447750321988791615322464262168318627237463714249754277190362195246329890490766601513683517722278780729696200186866434048"),
    bigint("10576895500643977583230644928524336637254474927428499508554380724390492659780981533203027367035444557561459392400373732868096"),
    bigint("21153791001287955166461289857048673274508949854856999017108761448780985319561963066406054734070889115122918784800747465736192"),
    bigint("42307582002575910332922579714097346549017899709713998034217522897561970639123926132812109468141778230245837569601494931472384"),
    bigint("84615164005151820665845159428194693098035799419427996068435045795123941278247852265624218936283556460491675139202989862944768"),
    bigint("169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536"),
    bigint("338460656020607282663380637712778772392143197677711984273740183180495765112991409062496875745134225841966700556811959451779072"),
    bigint("676921312041214565326761275425557544784286395355423968547480366360991530225982818124993751490268451683933401113623918903558144"),
    bigint("1353842624082429130653522550851115089568572790710847937094960732721983060451965636249987502980536903367866802227247837807116288"),
    bigint("2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576"),
    bigint("5415370496329716522614090203404460358274291162843391748379842930887932241807862544999950011922147613471467208908991351228465152"),
    bigint("10830740992659433045228180406808920716548582325686783496759685861775864483615725089999900023844295226942934417817982702456930304"),
    bigint("21661481985318866090456360813617841433097164651373566993519371723551728967231450179999800047688590453885868835635965404913860608"),
    bigint("43322963970637732180912721627235682866194329302747133987038743447103457934462900359999600095377180907771737671271930809827721216"),
    bigint("86645927941275464361825443254471365732388658605494267974077486894206915868925800719999200190754361815543475342543861619655442432"),
    bigint("173291855882550928723650886508942731464777317210988535948154973788413831737851601439998400381508723631086950685087723239310884864"),
    bigint("346583711765101857447301773017885462929554634421977071896309947576827663475703202879996800763017447262173901370175446478621769728"),
    bigint("693167423530203714894603546035770925859109268843954143792619895153655326951406405759993601526034894524347802740350892957243539456"),
    bigint("1386334847060407429789207092071541851718218537687908287585239790307310653902812811519987203052069789048695605480701785914487078912"),
    bigint("2772669694120814859578414184143083703436437075375816575170479580614621307805625623039974406104139578097391210961403571828974157824"),
    bigint("5545339388241629719156828368286167406872874150751633150340959161229242615611251246079948812208279156194782421922807143657948315648"),
    bigint("11090678776483259438313656736572334813745748301503266300681918322458485231222502492159897624416558312389564843845614287315896631296"),
    bigint("22181357552966518876627313473144669627491496603006532601363836644916970462445004984319795248833116624779129687691228574631793262592"),
    bigint("44362715105933037753254626946289339254982993206013065202727673289833940924890009968639590497666233249558259375382457149263586525184"),
    bigint("88725430211866075506509253892578678509965986412026130405455346579667881849780019937279180995332466499116518750764914298527173050368"),
    bigint("177450860423732151013018507785157357019931972824052260810910693159335763699560039874558361990664932998233037501529828597054346100736"),
    bigint("354901720847464302026037015570314714039863945648104521621821386318671527399120079749116723981329865996466075003059657194108692201472"),
    bigint("709803441694928604052074031140629428079727891296209043243642772637343054798240159498233447962659731992932150006119314388217384402944"),
    bigint("1419606883389857208104148062281258856159455782592418086487285545274686109596480318996466895925319463985864300012238628776434768805888"),
    bigint("2839213766779714416208296124562517712318911565184836172974571090549372219192960637992933791850638927971728600024477257552869537611776"),
    bigint("5678427533559428832416592249125035424637823130369672345949142181098744438385921275985867583701277855943457200048954515105739075223552"),
    bigint("11356855067118857664833184498250070849275646260739344691898284362197488876771842551971735167402555711886914400097909030211478150447104"),
    bigint("22713710134237715329666368996500141698551292521478689383796568724394977753543685103943470334805111423773828800195818060422956300894208"),
    bigint("45427420268475430659332737993000283397102585042957378767593137448789955507087370207886940669610222847547657600391636120845912601788416"),
    bigint("90854840536950861318665475986000566794205170085914757535186274897579911014174740415773881339220445695095315200783272241691825203576832"),
    bigint("181709681073901722637330951972001133588410340171829515070372549795159822028349480831547762678440891390190630401566544483383650407153664"),
    bigint("363419362147803445274661903944002267176820680343659030140745099590319644056698961663095525356881782780381260803133088966767300814307328"),
    bigint("726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656"),
    bigint("1453677448591213781098647615776009068707282721374636120562980398361278576226795846652382101427527131121525043212532355867069203257229312"),
    bigint("2907354897182427562197295231552018137414565442749272241125960796722557152453591693304764202855054262243050086425064711734138406514458624"),
    bigint("5814709794364855124394590463104036274829130885498544482251921593445114304907183386609528405710108524486100172850129423468276813028917248"),
    bigint("11629419588729710248789180926208072549658261770997088964503843186890228609814366773219056811420217048972200345700258846936553626057834496"),
    bigint("23258839177459420497578361852416145099316523541994177929007686373780457219628733546438113622840434097944400691400517693873107252115668992"),
    bigint("46517678354918840995156723704832290198633047083988355858015372747560914439257467092876227245680868195888801382801035387746214504231337984"),
    bigint("93035356709837681990313447409664580397266094167976711716030745495121828878514934185752454491361736391777602765602070775492429008462675968"),
    bigint("186070713419675363980626894819329160794532188335953423432061490990243657757029868371504908982723472783555205531204141550984858016925351936"),
    bigint("372141426839350727961253789638658321589064376671906846864122981980487315514059736743009817965446945567110411062408283101969716033850703872"),
    bigint("744282853678701455922507579277316643178128753343813693728245963960974631028119473486019635930893891134220822124816566203939432067701407744"),
    bigint("1488565707357402911845015158554633286356257506687627387456491927921949262056238946972039271861787782268441644249633132407878864135402815488"),
    bigint("2977131414714805823690030317109266572712515013375254774912983855843898524112477893944078543723575564536883288499266264815757728270805630976"),
    bigint("5954262829429611647380060634218533145425030026750509549825967711687797048224955787888157087447151129073766576998532529631515456541611261952"),
    bigint("11908525658859223294760121268437066290850060053501019099651935423375594096449911575776314174894302258147533153997065059263030913083222523904"),
    bigint("23817051317718446589520242536874132581700120107002038199303870846751188192899823151552628349788604516295066307994130118526061826166445047808"),
    bigint("47634102635436893179040485073748265163400240214004076398607741693502376385799646303105256699577209032590132615988260237052123652332890095616"),
    bigint("95268205270873786358080970147496530326800480428008152797215483387004752771599292606210513399154418065180265231976520474104247304665780191232"),
    bigint("190536410541747572716161940294993060653600960856016305594430966774009505543198585212421026798308836130360530463953040948208494609331560382464"),
    bigint("381072821083495145432323880589986121307201921712032611188861933548019011086397170424842053596617672260721060927906081896416989218663120764928"),
    bigint("762145642166990290864647761179972242614403843424065222377723867096038022172794340849684107193235344521442121855812163792833978437326241529856"),
    bigint("1524291284333980581729295522359944485228807686848130444755447734192076044345588681699368214386470689042884243711624327585667956874652483059712"),
    bigint("3048582568667961163458591044719888970457615373696260889510895468384152088691177363398736428772941378085768487423248655171335913749304966119424"),
    bigint("6097165137335922326917182089439777940915230747392521779021790936768304177382354726797472857545882756171536974846497310342671827498609932238848"),
    bigint("12194330274671844653834364178879555881830461494785043558043581873536608354764709453594945715091765512343073949692994620685343654997219864477696"),
    bigint("24388660549343689307668728357759111763660922989570087116087163747073216709529418907189891430183531024686147899385989241370687309994439728955392"),
    bigint("48777321098687378615337456715518223527321845979140174232174327494146433419058837814379782860367062049372295798771978482741374619988879457910784"),
    bigint("97554642197374757230674913431036447054643691958280348464348654988292866838117675628759565720734124098744591597543956965482749239977758915821568"),
    bigint("195109284394749514461349826862072894109287383916560696928697309976585733676235351257519131441468248197489183195087913930965498479955517831643136"),
    bigint("390218568789499028922699653724145788218574767833121393857394619953171467352470702515038262882936496394978366390175827861930996959911035663286272"),
    bigint("780437137578998057845399307448291576437149535666242787714789239906342934704941405030076525765872992789956732780351655723861993919822071326572544"),
    bigint("1560874275157996115690798614896583152874299071332485575429578479812685869409882810060153051531745985579913465560703311447723987839644142653145088"),
    bigint("3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176"),
    bigint("6243497100631984462763194459586332611497196285329942301718313919250743477639531240240612206126983942319653862242813245790895951358576570612580352"),
    bigint("12486994201263968925526388919172665222994392570659884603436627838501486955279062480481224412253967884639307724485626491581791902717153141225160704"),
    bigint("24973988402527937851052777838345330445988785141319769206873255677002973910558124960962448824507935769278615448971252983163583805434306282450321408"),
    bigint("49947976805055875702105555676690660891977570282639538413746511354005947821116249921924897649015871538557230897942505966327167610868612564900642816"),
    bigint("99895953610111751404211111353381321783955140565279076827493022708011895642232499843849795298031743077114461795885011932654335221737225129801285632"),
    bigint("199791907220223502808422222706762643567910281130558153654986045416023791284464999687699590596063486154228923591770023865308670443474450259602571264"),
    bigint("399583814440447005616844445413525287135820562261116307309972090832047582568929999375399181192126972308457847183540047730617340886948900519205142528"),
    bigint("799167628880894011233688890827050574271641124522232614619944181664095165137859998750798362384253944616915694367080095461234681773897801038410285056"),
    bigint("1598335257761788022467377781654101148543282249044465229239888363328190330275719997501596724768507889233831388734160190922469363547795602076820570112"),
    bigint("3196670515523576044934755563308202297086564498088930458479776726656380660551439995003193449537015778467662777468320381844938727095591204153641140224"),
    bigint("6393341031047152089869511126616404594173128996177860916959553453312761321102879990006386899074031556935325554936640763689877454191182408307282280448"),
    bigint("12786682062094304179739022253232809188346257992355721833919106906625522642205759980012773798148063113870651109873281527379754908382364816614564560896"),
    bigint("25573364124188608359478044506465618376692515984711443667838213813251045284411519960025547596296126227741302219746563054759509816764729633229129121792"),
    bigint("51146728248377216718956089012931236753385031969422887335676427626502090568823039920051095192592252455482604439493126109519019633529459266458258243584"),
    bigint("102293456496754433437912178025862473506770063938845774671352855253004181137646079840102190385184504910965208878986252219038039267058918532916516487168"),
    bigint("204586912993508866875824356051724947013540127877691549342705710506008362275292159680204380770369009821930417757972504438076078534117837065833032974336"),
    bigint("409173825987017733751648712103449894027080255755383098685411421012016724550584319360408761540738019643860835515945008876152157068235674131666065948672"),
    bigint("818347651974035467503297424206899788054160511510766197370822842024033449101168638720817523081476039287721671031890017752304314136471348263332131897344"),
    bigint("1636695303948070935006594848413799576108321023021532394741645684048066898202337277441635046162952078575443342063780035504608628272942696526664263794688"),
    bigint("3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127560071009217256545885393053328527589376"),
    bigint("6546781215792283740026379393655198304433284092086129578966582736192267592809349109766540184651808314301773368255120142018434513091770786106657055178752"),
    bigint("13093562431584567480052758787310396608866568184172259157933165472384535185618698219533080369303616628603546736510240284036869026183541572213314110357504"),
    bigint("26187124863169134960105517574620793217733136368344518315866330944769070371237396439066160738607233257207093473020480568073738052367083144426628220715008"),
    bigint("52374249726338269920211035149241586435466272736689036631732661889538140742474792878132321477214466514414186946040961136147476104734166288853256441430016"),
    bigint("104748499452676539840422070298483172870932545473378073263465323779076281484949585756264642954428933028828373892081922272294952209468332577706512882860032"),
    bigint("209496998905353079680844140596966345741865090946756146526930647558152562969899171512529285908857866057656747784163844544589904418936665155413025765720064"),
    bigint("418993997810706159361688281193932691483730181893512293053861295116305125939798343025058571817715732115313495568327689089179808837873330310826051531440128"),
    bigint("837987995621412318723376562387865382967460363787024586107722590232610251879596686050117143635431464230626991136655378178359617675746660621652103062880256"),
    bigint("1675975991242824637446753124775730765934920727574049172215445180465220503759193372100234287270862928461253982273310756356719235351493321243304206125760512"),
    bigint("3351951982485649274893506249551461531869841455148098344430890360930441007518386744200468574541725856922507964546621512713438470702986642486608412251521024"),
    bigint("6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042048"),
    bigint("13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096")
}

powersTwo[0] = bigint("1")

local bigZero = bigint(0)
local bigOne = bigint(1)

local function numberToBytes(num, bits, byteSize)
    if bits > #powersTwo then
        error("Too many bits. Must be <= " .. #powersTwo .. ".")
    end

    num = bigint(num)

    local resultBits = {}
    resultBits[1] = {}
    for i = bits - 1, 0, -1 do
        local expVal = powersTwo[i]
        local resultant = num - expVal
        if expVal <= resultant then
            -- Invalid data!
            return nil
        end

        if resultant < bigZero then
            -- A zero bit
            if #(resultBits[#resultBits]) >= byteSize then
                table.insert(resultBits, {0})
            else
                table.insert(resultBits[#resultBits], 0)
            end
        else
            -- A one bit
            num = resultant
            if #(resultBits[#resultBits]) >= byteSize then
                table.insert(resultBits, {1})
            else
                table.insert(resultBits[#resultBits], 1)
            end
        end

        if num == bigint(0) then
            break
        end
    end

    local results = {}
    for _, binarySeq in pairs(resultBits) do
        local thisResult = 0
        for k, bin in pairs(binarySeq) do
            if bin == 1 then
                thisResult = thisResult + 2^(byteSize - k)
            end
        end
        table.insert(results, thisResult)
    end

    return results
end

local function bytesToNumber(bytes, bits, byteSize)
    if bits > #powersTwo then
        error("Too many bits. Must be <= " .. #powersTwo .. ".")
    end

    if #bytes > bits/byteSize then
        error("Too many bytes to store into the number of bits available. Must be <= " ..
                bits/byteSize .. ".")
    end

    local binary = {}
    for _, byte in pairs(bytes) do
        for i = byteSize - 1, 0, -1 do
            if byte - (2 ^ i) < 0 then
                table.insert(binary, 0)
            else
                table.insert(binary, 1)
                byte = byte - (2 ^ i)
            end
        end
    end

    local num = bigint(0)
    for i = 1, #binary do
        if binary[i] == 1 then
            num = num + powersTwo[bits - i]
        end
    end

    return tostring(num)
end

local function encodeBigNumbers(numbers)
    for k, v in pairs(numbers) do
        numbers[k] = tostring(v)
    end
    return numbers
end

local function stringToBytes(str)
    local result = {}
    for i = 1, #str do
        table.insert(result, string.byte(str, i))
    end
    return result
end

local function bytesToString(bytes)
    local str = ""
    for _, v in pairs(bytes) do
        str = str .. string.char(v)
    end
    return str
end

local function modexp(base, exponent, modulus)
    local r = 1

    while true do
        if exponent % 2 == bigOne then
            r = r * base % modulus
        end
        exponent = exponent / 2

        if exponent == bigZero then
            break
        end
        base = base * base % modulus
    end

    return r
end

local function crypt(key, number)
    local exp
    if key.public then
        exp = bigint(key.public)
    else
        exp = bigint(key.private)
    end

    return tostring(modexp(bigint(number), exp, bigint(key.shared)))
end

--
-- END OF LIBRARY
--
-- MODIFICATION/ADAPTATION BY DELERANAX FOR TPM
--
_G["rsaCryptTemp"] = {byteSize = 8, bits = 512}

local function loadLocalKeys()
    if fs.exists("/public.key") and fs.exists("/private.key") then
        local f = io.open("/public.key", "r")
        local publicKey = textutils.unserialise(f:read("*a"))
        f:close()
        f = io.open("/private.key", "r")
        local privateKey = textutils.unserialise(f:read("*a"))
        f:close()
        return publicKey, privateKey
    else
        return nil
    end
end

local function encryptString(msg, key)
    return crypt(key, bytesToNumber(stringToBytes(msg), _G.rsaCryptTemp.bits, _G.rsaCryptTemp.byteSize))
end

local function decryptString(msg, key)
    return bytesToString(numberToBytes(crypt(key, msg), _G.rsaCryptTemp.bits, _G.rsaCryptTemp.byteSize))
end

return {loadLocalKeys = loadLocalKeys, encryptString = encryptString, decryptString = decryptString}